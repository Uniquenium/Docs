import{_ as o,c as r,o as t,ae as a}from"./chunks/framework.Cd-3tpCq.js";const b=JSON.parse('{"title":"UniDeskWindow","description":"","frontmatter":{"title":"UniDeskWindow","editLink":true},"headers":[],"relativePath":"controls-reference/UniDeskWindow.md","filePath":"zh/controls-reference/UniDeskWindow.md"}'),i={name:"controls-reference/UniDeskWindow.md"};function n(p,e,d,l,s,c){return t(),r("div",null,e[0]||(e[0]=[a('<h1 id="unideskwindow-类型" tabindex="-1">UniDeskWindow 类型 <a class="header-anchor" href="#unideskwindow-类型" aria-label="Permalink to &quot;UniDeskWindow 类型&quot;">​</a></h1><p>基本窗口</p><table tabindex="0"><thead><tr><th>控件类型</th><th>元件</th></tr></thead><tbody><tr><td>源代码文件路径</td><td><code>UniDesk/UniDeskWindow.qml</code></td></tr><tr><td>继承</td><td><a href="./bases/UniDeskWindowBase">UniDeskWindowBase</a></td></tr></tbody></table><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><h3 id="property-string-minimizetext" tabindex="-1"><code>property string minimizeText</code> <a class="header-anchor" href="#property-string-minimizetext" aria-label="Permalink to &quot;`property string minimizeText`&quot;">​</a></h3><p>最小化提示文字。</p><h3 id="property-string-restoretext" tabindex="-1"><code>property string restoreText</code> <a class="header-anchor" href="#property-string-restoretext" aria-label="Permalink to &quot;`property string restoreText`&quot;">​</a></h3><p>还原提示文字。</p><h3 id="property-string-maximizetext" tabindex="-1"><code>property string maximizeText</code> <a class="header-anchor" href="#property-string-maximizetext" aria-label="Permalink to &quot;`property string maximizeText`&quot;">​</a></h3><p>最大化提示文字。</p><h3 id="property-string-closetext" tabindex="-1"><code>property string closeText</code> <a class="header-anchor" href="#property-string-closetext" aria-label="Permalink to &quot;`property string closeText`&quot;">​</a></h3><p>关闭提示文字</p><h3 id="property-url-windowicon" tabindex="-1"><code>property url windowIcon</code> <a class="header-anchor" href="#property-url-windowicon" aria-label="Permalink to &quot;`property url windowIcon`&quot;">​</a></h3><p>窗口的图标。</p><h3 id="property-bool-fixsize" tabindex="-1"><code>property bool fixSize</code> <a class="header-anchor" href="#property-bool-fixsize" aria-label="Permalink to &quot;`property bool fixSize`&quot;">​</a></h3><p>是否固定窗口的大小不变。 默认值为<code>false</code>。</p><h3 id="property-bool-isrestore" tabindex="-1"><code>property bool isRestore</code> <a class="header-anchor" href="#property-bool-isrestore" aria-label="Permalink to &quot;`property bool isRestore`&quot;">​</a></h3><p>下次点击窗口最大化按钮时是否还原（如果不是则最大化）</p><h3 id="property-var-windowvisibility" tabindex="-1"><code>property var windowVisibility</code> <a class="header-anchor" href="#property-var-windowvisibility" aria-label="Permalink to &quot;`property var windowVisibility`&quot;">​</a></h3><p>相当于窗口的<code>visibility</code>属性。</p><h3 id="property-item-appbar" tabindex="-1"><code>property Item appBar</code> <a class="header-anchor" href="#property-item-appbar" aria-label="Permalink to &quot;`property Item appBar`&quot;">​</a></h3><p>获取窗口的标题栏。</p><h3 id="property-bool-showclose" tabindex="-1"><code>property bool showClose</code> <a class="header-anchor" href="#property-bool-showclose" aria-label="Permalink to &quot;`property bool showClose`&quot;">​</a></h3><p>是否显示关闭按钮。默认为<code>true</code>。</p><h3 id="property-bool-showminimize" tabindex="-1"><code>property bool showMinimize</code> <a class="header-anchor" href="#property-bool-showminimize" aria-label="Permalink to &quot;`property bool showMinimize`&quot;">​</a></h3><p>是否显示最小化按钮。默认为<code>true</code>。</p><h3 id="property-bool-showmaximize" tabindex="-1"><code>property bool showMaximize</code> <a class="header-anchor" href="#property-bool-showmaximize" aria-label="Permalink to &quot;`property bool showMaximize`&quot;">​</a></h3><p>是否显示最大化/还原按钮。默认为<code>true</code>。</p><h3 id="property-bool-automaximize" tabindex="-1"><code>property bool autoMaximize</code> <a class="header-anchor" href="#property-bool-automaximize" aria-label="Permalink to &quot;`property bool autoMaximize`&quot;">​</a></h3><p>是否在窗口创建时自动最大化。默认为<code>false</code>。</p><h3 id="property-bool-autocenter" tabindex="-1"><code>property bool autoCenter</code> <a class="header-anchor" href="#property-bool-autocenter" aria-label="Permalink to &quot;`property bool autoCenter`&quot;">​</a></h3><p>是否在窗口创建时自动移到屏幕正中央。默认为<code>true</code>。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="function-movewindowtodesktopcenter" tabindex="-1"><code>function moveWindowToDesktopCenter()</code> <a class="header-anchor" href="#function-movewindowtodesktopcenter" aria-label="Permalink to &quot;`function moveWindowToDesktopCenter()`&quot;">​</a></h3><p>将窗口移动到屏幕正中央。</p><h3 id="function-containeritem" tabindex="-1"><code>function containerItem()</code> <a class="header-anchor" href="#function-containeritem" aria-label="Permalink to &quot;`function containerItem()`&quot;">​</a></h3><p>获取窗口的容器元素。</p>',37)]))}const m=o(i,[["render",n]]);export{b as __pageData,m as default};
