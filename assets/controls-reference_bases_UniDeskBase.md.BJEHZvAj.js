import{_ as a,c as e,o as t,ae as i}from"./chunks/framework.Cd-3tpCq.js";const c=JSON.parse('{"title":"UniDeskBase","description":"","frontmatter":{"title":"UniDeskBase","editLink":true},"headers":[],"relativePath":"controls-reference/bases/UniDeskBase.md","filePath":"zh/controls-reference/bases/UniDeskBase.md"}'),n={name:"controls-reference/bases/UniDeskBase.md"};function l(o,s,r,d,h,p){return t(),e("div",null,s[0]||(s[0]=[i('<h1 id="unideskbase-类型" tabindex="-1">UniDeskBase 类型 <a class="header-anchor" href="#unideskbase-类型" aria-label="Permalink to &quot;UniDeskBase 类型&quot;">​</a></h1><p>UniDeskBase 是一个无边框无任务栏图标透明窗口，用于让元件直接显示在系统桌面上。</p><table tabindex="0"><thead><tr><th>控件类型</th><th>基</th></tr></thead><tbody><tr><td>源代码文件路径</td><td><code>main/UniDeskBases.py</code></td></tr><tr><td>继承</td><td><a href="https://doc.qt.io/qt-6.8/qml-qtquick-window.html" target="_blank" rel="noreferrer">QtQuick Window</a></td></tr></tbody></table><h2 id="使用的windowflags" tabindex="-1">使用的WindowFlags <a class="header-anchor" href="#使用的windowflags" aria-label="Permalink to &quot;使用的WindowFlags&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.setFlag(Qt.WindowType.FramelessWindowHint,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.setFlag(Qt.WindowType.WindowStaysOnBottomHint,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.setFlag(Qt.WindowType.Tool,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="信号" tabindex="-1">信号 <a class="header-anchor" href="#信号" aria-label="Permalink to &quot;信号&quot;">​</a></h2><h3 id="focusout" tabindex="-1"><code>focusOut</code> <a class="header-anchor" href="#focusout" aria-label="Permalink to &quot;`focusOut`&quot;">​</a></h3><p>该信号在本控件失去焦点时触发</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>使用的事件名是<code>onFocusOut</code>。</p></div>',9)]))}const u=a(n,[["render",l]]);export{c as __pageData,u as default};
