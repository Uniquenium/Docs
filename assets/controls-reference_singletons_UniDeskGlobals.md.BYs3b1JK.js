import{_ as t,c as a,o as l,ae as o}from"./chunks/framework.Cd-3tpCq.js";const b=JSON.parse('{"title":"UniDeskGlobals","description":"","frontmatter":{"title":"UniDeskGlobals","editLink":true},"headers":[],"relativePath":"controls-reference/singletons/UniDeskGlobals.md","filePath":"zh/controls-reference/singletons/UniDeskGlobals.md"}'),i={name:"controls-reference/singletons/UniDeskGlobals.md"};function s(r,e,n,d,h,c){return l(),a("div",null,e[0]||(e[0]=[o('<h1 id="unideskglobals-类型" tabindex="-1">UniDeskGlobals 类型 <a class="header-anchor" href="#unideskglobals-类型" aria-label="Permalink to &quot;UniDeskGlobals 类型&quot;">​</a></h1><p>本单项用于存储一些不直接被记录在设置文件中的全局常量</p><table tabindex="0"><thead><tr><th>控件类型</th><th>抽象单项</th></tr></thead><tbody><tr><td>源代码文件路径</td><td><code>main/UniDeskGlobals.py</code></td></tr><tr><td>继承</td><td><a href="https://doc.qt.io/qt-6.8/qml-qtquick-item.html" target="_blank" rel="noreferrer">QtQuick Item</a></td></tr></tbody></table><h2 id="访问" tabindex="-1">访问 <a class="header-anchor" href="#访问" aria-label="Permalink to &quot;访问&quot;">​</a></h2><div class="language-qml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">qml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UniDeskGlobals.&lt;常量名&gt;</span></span></code></pre></div><h2 id="常量属性" tabindex="-1">常量属性 <a class="header-anchor" href="#常量属性" aria-label="Permalink to &quot;常量属性&quot;">​</a></h2><h3 id="property-bool-islight" tabindex="-1"><code>property bool isLight</code> <a class="header-anchor" href="#property-bool-islight" aria-label="Permalink to &quot;`property bool isLight`&quot;">​</a></h3><p>存储软件当前的颜色状态是否为浅色。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="slot-int-def-updateislight-self-val" tabindex="-1"><code>@Slot(int) def updateIsLight(self,val)</code> <a class="header-anchor" href="#slot-int-def-updateislight-self-val" aria-label="Permalink to &quot;`@Slot(int) def updateIsLight(self,val)`&quot;">​</a></h3><p>刷新软件当前的颜色状态</p><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li>val: 保留属性，无意义</li></ul>',13)]))}const u=t(i,[["render",s]]);export{b as __pageData,u as default};
